name: Release
on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: Create a draft release
        required: true
        type: boolean
        default: false
  push:
    tags:
      - '*'
concurrency:
  group: release
  cancel-in-progress: true
run-name: Release by @${{ github.actor }} ${{ github.sha }}
permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: read
jobs:
  get-version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Release Version
        id: get-version
        uses: dstrates/github-actions/actions/release-version@main
      - run: |
          echo "**Version:** ${{ steps.get-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Short SHA:** $(git rev-parse --short HEAD)" >> $GITHUB_STEP_SUMMARY
  build:
    if: ${{ needs.get-version.outputs.version != 'undefined' || (github.event_name == 'workflow_dispatch') }}
    name: Build
    needs: [ get-version ]
    runs-on: ubuntu-latest
    container: golang:1.21.3-alpine
    steps:
      - name: Build Scan Push
        uses: dstrates/github-actions/actions/ci-lambda-build@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  release:
    if: ${{ needs.get-version.outputs.version != 'undefined' || (github.event_name == 'workflow_dispatch') }}
    name: Release
    runs-on: ubuntu-latest
    needs: [ get-version, build ]
    steps:
      - name: Generate Release
        uses: dstrates/github-actions/actions/release@main
        with:
          draft: ${{ inputs.releaseType }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
